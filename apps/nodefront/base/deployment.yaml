apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodefront
  labels:
    helm.sh/chart: nodefront-0.1.0
    app.kubernetes.io/name: nodefront
    app.kubernetes.io/instance: nodefront
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nodefront
      app.kubernetes.io/instance: nodefront
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodefront
        app.kubernetes.io/instance: nodefront
        sdlc: development
        appid: "123456"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: default
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: nodefront
          image: "rodstewart/nodefront:main-e000970"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 60m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 64Mi
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /healthcheck.html?probe=live
              port: 3000
            periodSeconds: 60
            failureThreshold: 2
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /healthcheck.html?probe=ready
              port: 3000
            periodSeconds: 15
            failureThreshold: 4
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /healthcheck.html?probe=startup
              port: 3000
            periodSeconds: 30
            failureThreshold: 3
            timeoutSeconds: 5
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: page-files
              mountPath: /app/share
            - name: secret-store
              mountPath: /mnt/secret-store
          envFrom:
            - configMapRef:
                name: nodefront-config
          env:
            - name: FROM_FIELD
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: IMAGE_TAG
              value: "main-e000970"
            - name: FROM_SECRET
              valueFrom:
                secretKeyRef:
                  key: myapp-secret-key
                  name: myapp-secret-key
      volumes:
        - name: page-files
          persistentVolumeClaim:
            claimName: nodefront-page-files-pvc
        - name: secret-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: nodefront-secret-provider-class
